import telebot
import configure
import random
from telebot import types

caesar = telebot.TeleBot(configure.config['token'])

@caesar.message_handler(commands = ['start'])
def hello(message):
	caesar.send_message(message.chat.id, '–¢–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç\nüî± –®–∏—Ñ—Ä –¶–µ–∑–∞—Ä—è 2.0 üî±\n\n–Ø –∏—Å–ø–æ–ª—å–∑—É—é —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∞–ª—Ñ–∞–≤–∏—Ç, –¥–æ—Å—Ç—É–ø–Ω—ã–π —Ç–æ–ª—å–∫–æ –º–Ω–µ. –ü–æ—Å–ª–µ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è, —Ç—ã –ø–æ–ª—É—á–∏—à—å <b>–∑–∞—Å–µ–∫—Ä–µ—á–µ–Ω—É—é —Ñ—Ä–∞–∑—É –∏ –∫–ª—é—á</b>. –≠—Ç–∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–≥–æ–¥—è—Ç—Å—è —Ç–µ–±–µ –¥–ª—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏.', parse_mode = 'HTML')
	kb = types.InlineKeyboardMarkup(row_width = 1)
	c = types.InlineKeyboardButton(text='–∑–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å', callback_data='code')
	dc = types.InlineKeyboardButton(text='—Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å', callback_data='decode')
	kb.add(c, dc)
	caesar.send_message(message.chat.id, 'üßê –°–∫–∞–∂–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?', reply_markup = kb)

@caesar.callback_query_handler(func=lambda c:c.data)
def answer_callback(callback):
	activiti = callback.data
	if activiti == 'code':
		phrase = caesar.edit_message_text(chat_id = callback.message.chat.id, message_id = callback.message.id, text = '‚ú≥Ô∏è‚ú≥Ô∏è‚ú≥Ô∏è –¢–≤–æ–π –≤—ã–±–æ—Ä - <b>–ó–ê–®–ò–§–†–û–í–ê–¢–¨</b>\n–í–≤–µ–¥–∏ —Ñ—Ä–∞–∑—É, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å:', parse_mode = 'HTML')
		caesar.register_next_step_handler(phrase, f_code)
	elif activiti == 'decode':
		phrase_code = caesar.edit_message_text(chat_id = callback.message.chat.id, message_id = callback.message.id, text = '‚úÖ‚úÖ‚úÖ –¢–≤–æ–π –≤—ã–±–æ—Ä - –†–ê–°–®–ò–§–†–û–í–ê–¢–¨\n–í–≤–µ–¥–∏ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—É—é —Ñ—Ä–∞–∑—É:')
		caesar.register_next_step_handler(phrase_code, f_decode)

# –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—Ä–∞–∑—ã
def f_code(message):
	f = message.text.lower()
	caesar.send_message(message.chat.id, '–ö–æ–¥–∏—Ä—É—é...')
	code = random.randint(3,36)
	alphabet = ['a'# –ª—é–±–æ–π –∞–ª—Ñ–∞–≤–∏—Ç]
  f = list(f)

	# –∏—â–µ–º –∏–Ω–¥–µ–∫—Å—ã –±—É–∫–≤ –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Ñ—Ä–∞–∑—ã (–≤ —Å–ø–∏—Å–∫–µ –∞–ª—Ñ–∞–≤–∏—Ç), —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–ø–∏—Å–æ–∫ f_index
	f_index = []
	for i in f:
		for z in alphabet:
			if i == z:
				n = alphabet.index(z)
				f_index.append(n)

	# –º–µ–Ω—è–µ–º –∞–ª—Ñ–∞–≤–∏—Ç –Ω–∞ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π, —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–ø–∏—Å–æ–∫ alphabet
	alphabet_code = []
	i = 0
	while i < code:
		z = alphabet.pop(0)
		alphabet_code.append(z)
		i += 1
	alphabet.extend(alphabet_code)

	# –∏—â–µ–º –∏–Ω–¥–µ–∫—Å—ã —Ñ—Ä–∞–∑—ã –≤ –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–º –∞–ª—Ñ–∞–≤–∏—Ç–µ
	f_index_code = []
	f_code = ''
	for i in f_index:
		n = alphabet[i]
		f_index_code.append(n)
	for i in f_index_code:
		f_code += i

	caesar.send_message(message.chat.id, '–®–∏—Ñ—Ä-—Ñ—Ä–∞–∑–∞: \n‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è\n\n' + str(f_code) + '\n\n‚¨ÜÔ∏è‚¨ÜÔ∏è‚¨ÜÔ∏è\n—Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å - @caesar_code_bot')
	caesar.send_message(message.chat.id, 'üëäüòé –ì–æ—Ç–æ–≤–æ!\nüì© –ø–µ—Ä–µ—à–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã—à–µ –∞–¥—Ä–µ—Å–∞—Ç—É\n–ù–ï –ó–ê–ë–£–î–¨ –°–û–û–ë–©–ò–¢–¨ –ö–õ–Æ–ß ‚û°Ô∏è ' + str(code+1))
	caesar.send_message(message.chat.id, '–ë–ª–∞–≥–æ–¥–∞—Ä—é —á—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è üî±–¶–µ–∑–∞—Ä–µ–º!\n–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ - /start')

# –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—Ä–∞–∑—ã
# –ø–æ–ª—É—á–µ–Ω–∏–µ —Ñ—Ä–∞–∑—ã, –∑–∞–ø—Ä–æ—Å –∫–ª—é—á–∞
def f_decode(message):
	user_info = {}
	user_info ['f'] = message.text
	caesar.send_message(message.chat.id, '–û–∫, —Ñ—Ä–∞–∑—É –∑–∞–ø–æ–º–Ω–∏–ª, –Ω–æ –Ω—É–∂–Ω–æ –µ—â–µ –∫–æ–µ-—á—Ç–æ...')
	send = caesar.send_message(message.chat.id, '–ú–Ω–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –∫–ª—é—á üîë. –≠—Ç–æ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã (–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å) –ø–æ–ª—É—á–∏–ª –ø—Ä–∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–∏ —Ñ—Ä–∞–∑—ã. –í–≤–µ–¥–∏ –µ–≥–æ –Ω–∏–∂–µ: ')
	caesar.register_next_step_handler(send, ff_decode, user_info)

# –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–ª—é—á–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
def ff_decode(message, user_info):
	user_info['code'] = message.text
	caesar.send_message(message.chat.id, '–ö–ª—é—á –ø–æ–ª—É—á–µ–Ωüîë, –ø—Ä–æ–≤–µ—Ä—è—é...')
	f = user_info['f']
	code = user_info['code']
	try:
		if int(code) >= 3 and int(code) <=36:
			caesar.send_message(message.chat.id, '–ö–ª—é—á –ø—Ä–∏–Ω—è—Çüîë, –¥–µ—à–∏—Ñ—Ä—É—é...')
			alphabet = ['a'# –ª—é–±–æ–π –∞–ª—Ñ–∞–≤–∏—Ç]
      f = list(f)
			code = int(code)
			
			# –º–µ–Ω—è–µ–º –∞–ª—Ñ–∞–≤–∏—Ç
			alphabet_code = []
			i = 0
			while i < code-1:
				z = alphabet.pop(0)
				alphabet_code.append(z)
				i += 1
			alphabet.extend(alphabet_code)

			# –∏—â–µ–º –∏–Ω–¥–µ–∫—Å—ã –±—É–∫–≤ –≤–≤–µ–¥–µ–Ω–Ω–æ–π —Ñ—Ä–∞–∑—ã (–≤ —Å–ø–∏—Å–∫–µ –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç), —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–ø–∏—Å–æ–∫ f_index
			f_index = []
			for i in f:
				for z in alphabet:
					if i == z:
						n = alphabet.index(z)
						f_index.append(n)

			# –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∞–ª—Ñ–∞–≤–∏—Ç
      alphabet = ['a'# –ª—é–±–æ–π –∞–ª—Ñ–∞–≤–∏—Ç]			
      f_decode = []
			f_obj_decode = ''
			for i in f_index:
				n = alphabet[i]
				f_decode.append(n)
			for i in f_decode:
				f_obj_decode += i

			caesar.send_message(message.chat.id,'–¢–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è\n\n' + str(f_obj_decode) + '\n\n‚¨ÜÔ∏è‚¨ÜÔ∏è‚¨ÜÔ∏è\n')
			caesar.send_message(message.chat.id,'–ë–ª–∞–≥–æ–¥–∞—Ä—é —á—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è üî±–¶–µ–∑–∞—Ä–µ–º!\n–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ - /start')

		else:
			caesar.send_message(message.chat.id, '–ê, –º—ã –≤ —É–≥–∞–¥–∞–π–∫—É –∏–≥—Ä–∞–µ–º?\nü§°–ù—É —á—Ç–æ –∂, –∏–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å, —É–¥–∞—á–∏!\n\n–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ - /start')
	except ValueError:
		caesar.send_message(message.chat.id, 'ü§•–¢—ã —Ö–æ—á–µ—à—å –º–µ–Ω—è –æ–±–º–∞–Ω—É—Ç—å?\n–Ø –ø—Ä–æ—Å–∏–ª —á–∏—Å–ª–æ!ü§¨\n–ê-—Ç–∞-—Ç–∞, –¥–∞–≤–∞–π-–∫–∞ –ø–æ –Ω–æ–≤–æ–π!\n\n–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ - /start')

# –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ–º –º—É—Å–æ—Ä –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –¥–∏–∞–ª–æ–≥
@caesar.message_handler(content_types = ['text'])
def trash(message):
	caesar.send_message(message.chat.id, '–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è üî±–¶–µ–∑–∞—Ä—è - –Ω–∞–∂–º–∏ /start')




caesar.polling(none_stop = True, interval = 0)
